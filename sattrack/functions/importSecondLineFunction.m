%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/kevin/SkyDrive/KTH Work/MATLAB/sattrack/amateur.txt
%
% To extend the code to different selected data or a different
% text file, generate a function instead of a script.


% Auto-generated by MATLAB on 2014/06/29 16:22:40
function [incl,raan,e,aop,ma,revs] = importSecondLineFunction(filename)
%% Initialize variables.
if nargin < 1
	filename = '/Users/kevin/SkyDrive/KTH Work/MATLAB/sattrack/amateur.txt';
end
startRow = 3;
endRow = 3;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: text (%s)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%1f%6f%1s%8f%9f%8f%10f%9f%11f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to
% generate this code. If an error occurs for a different file,
% try regenerating the code from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', '', 'WhiteSpace', '', 'HeaderLines', startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so
% no post processing code is included. To generate code which
% works for unimportable data, select unimportable cells in a
% file and regenerate the script.

%% Allocate imported array to column variable names
% O = dataArray{:, 1};
% satNumber = dataArray{:, 2};
% VarName3 = dataArray{:, 3};
incl 	= dataArray{:, 4};
raan 	= dataArray{:, 5};
aop 	= dataArray{:, 7};
ma 		= dataArray{:, 8};
revs 	= dataArray{:, 9};
% revNumber = dataArray{:, 10};

%% Clear temporary variables
clearvars filename startRow endRow formatSpec fileID dataArray ans;
%% Initialize variables.
filename = '/Users/kevin/SkyDrive/KTH Work/MATLAB/sattrack/stations.txt';
delimiter = ' ';
startRow = 3;
endRow = 3;

%% Format string for each line of text:
%   column5: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%*s%*s%*s%s%*s%*s%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to
% generate this code. If an error occurs for a different file,
% try regenerating the code from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so
% no post processing code is included. To generate code which
% works for unimportable data, select unimportable cells in a
% file and regenerate the script.

%% Allocate imported array to column variable names
e = dataArray{:, 1};
e = str2num(['.' e{1,1}])
%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;